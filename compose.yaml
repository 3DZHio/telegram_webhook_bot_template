services:
  src:
    container_name: src
    restart: always
    networks:
      - network
    build: .
    depends_on:
      - proxy
      - storage
      - database
    expose:
      - ${WEBHOOK_PORT}

  proxy:
    container_name: proxy
    restart: always
    networks:
      - network
    image: nginx
    environment:
      WEBHOOK_HOST: ${WEBHOOK_HOST}
      WEBHOOK_PORT: ${WEBHOOK_PORT}
      WEBHOOK_PATH: ${WEBHOOK_PATH}
      WEBHOOK_DOMAIN: ${WEBHOOK_DOMAIN}
      ADMINER_HOST: ${ADMINER_HOST}
      ADMINER_PORT: ${ADMINER_PORT}
      ADMINER_PATH: ${ADMINER_PATH}
    volumes:
      - ./init/proxy:/etc/nginx/templates
      - ./data/ssl:/etc/letsencrypt
    ports:
      - 80:80
      - 443:443

  storage:
    container_name: storage
    restart: always
    networks:
      - network
    image: redis
    volumes:
      - ./data/storage:/data

  database:
    container_name: database
    restart: always
    networks:
      - network
    image: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./init/database:/docker-entrypoint-initdb.d
      - ./data/database:/var/lib/postgresql/data

  adminer:
    container_name: adminer
    restart: always
    networks:
      - network
    image: adminer
    depends_on:
      - database
    expose:
      - ${ADMINER_PORT}

networks:
  network:
    name: network
    driver: bridge